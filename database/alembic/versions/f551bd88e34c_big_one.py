"""big one

Revision ID: f551bd88e34c
Revises: 77665a1e12f4
Create Date: 2025-02-04 16:08:42.182921

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f551bd88e34c'
down_revision: Union[str, None] = '77665a1e12f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contract_TRU',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_sm', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_sm')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_sm', sa.Integer(), nullable=False),
    sa.Column('employee', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('second_name', sa.String(length=255), nullable=True),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('filial_id_sm', sa.Integer(), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('job_type', sa.String(length=255), nullable=True),
    sa.Column('subdivision', sa.String(length=255), nullable=True),
    sa.Column('iin', sa.String(length=255), nullable=True),
    sa.Column('personnel_number', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.String(length=255), nullable=True),
    sa.Column('nationality', sa.String(length=255), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('place_of_birth', sa.String(length=255), nullable=True),
    sa.Column('social_status', sa.String(length=255), nullable=True),
    sa.Column('employee_type', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('position_level', sa.String(length=255), nullable=True),
    sa.Column('reserved', sa.Boolean(), nullable=True),
    sa.Column('labor_union', sa.String(length=255), nullable=True),
    sa.Column('nomenclature_CEO', sa.Boolean(), nullable=True),
    sa.Column('nomenclature_CA', sa.Boolean(), nullable=True),
    sa.Column('retiree', sa.Boolean(), nullable=True),
    sa.Column('member_collective_agreement', sa.Boolean(), nullable=True),
    sa.Column('wage_rate', sa.Boolean(), nullable=True),
    sa.Column('salary', sa.Boolean(), nullable=True),
    sa.Column('rating', sa.Boolean(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['filial_id_sm'], ['filials.id_sm'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_sm')
    )
    op.create_table('legal_claims',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_sm', sa.Integer(), nullable=False),
    sa.Column('responsible_employee_id_sm', sa.Integer(), nullable=True),
    sa.Column('contract_TRU_id_sm', sa.Integer(), nullable=True),
    sa.Column('conclusion_date', sa.DateTime(), nullable=True),
    sa.Column('contract_number', sa.String(length=255), nullable=True),
    sa.Column('applicant', sa.String(length=255), nullable=True),
    sa.Column('defendant', sa.String(length=255), nullable=True),
    sa.Column('case_classification', sa.String(length=255), nullable=True),
    sa.Column('property_requirements', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(length=255), nullable=True),
    sa.Column('non_property_claims', sa.String(length=255), nullable=True),
    sa.Column('grounds_of_claim', sa.String(length=255), nullable=True),
    sa.Column('result', sa.String(length=255), nullable=True),
    sa.Column('dishonest_supplier', sa.Boolean(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_TRU_id_sm'], ['contract_TRU.id_sm'], ondelete='NO ACTION'),
    sa.ForeignKeyConstraint(['responsible_employee_id_sm'], ['employee.id_sm'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_sm')
    )
    op.drop_table('mob_groups')
    op.add_column('contracts', sa.Column('date_modified', sa.DateTime(), nullable=True))
    op.add_column('contracts', sa.Column('date_created', sa.DateTime(), nullable=True))
    op.add_column('customers', sa.Column('status', sa.String(length=255), nullable=True))
    op.add_column('customers', sa.Column('date_modified', sa.DateTime(), nullable=True))
    op.add_column('customers', sa.Column('date_created', sa.DateTime(), nullable=True))
    op.alter_column('customers', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('customers', 'bin',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('customers', 'date')
    op.add_column('filials', sa.Column('longitude', sa.Double(), nullable=True))
    op.add_column('filials', sa.Column('latitude', sa.Double(), nullable=True))
    op.add_column('filials', sa.Column('date_modified', sa.DateTime(), nullable=True))
    op.add_column('filials', sa.Column('date_created', sa.DateTime(), nullable=True))
    op.alter_column('filials', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('filials', 'date')
    op.add_column('income', sa.Column('date_modified', sa.DateTime(), nullable=True))
    op.add_column('income', sa.Column('date_created', sa.DateTime(), nullable=True))
    op.alter_column('income', 'id_sm',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('income', 'comment',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=1023),
               existing_nullable=True)
    op.alter_column('income', 'additional_comment',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=1023),
               existing_nullable=True)
    op.create_unique_constraint(None, 'income', ['id_sm'])
    op.drop_column('income', 'date')
    op.add_column('objects', sa.Column('contract_id_sm', sa.Integer(), nullable=True))
    op.add_column('objects', sa.Column('date_modified', sa.DateTime(), nullable=True))
    op.add_column('objects', sa.Column('date_created', sa.DateTime(), nullable=True))
    op.alter_column('objects', 'filial_id_sm',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('objects', 'customer_id_sm',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('objects', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('objects', 'contract_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('objects', 'type',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint('objects_dogovor_id_sm_fkey', 'objects', type_='foreignkey')
    op.create_foreign_key(None, 'objects', 'contracts', ['contract_id_sm'], ['id_sm'], ondelete='CASCADE')
    op.drop_column('objects', 'dogovor_id_sm')
    op.drop_column('objects', 'date')
    op.add_column('posts', sa.Column('operation_mode', sa.Integer(), nullable=True))
    op.add_column('posts', sa.Column('linear_part', sa.Text(), nullable=True))
    op.add_column('posts', sa.Column('length_from', sa.Double(), nullable=True))
    op.add_column('posts', sa.Column('length_to', sa.Double(), nullable=True))
    op.add_column('posts', sa.Column('date_modified', sa.DateTime(), nullable=True))
    op.add_column('posts', sa.Column('date_created', sa.DateTime(), nullable=True))
    op.alter_column('posts', 'filial_id_sm',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('posts', 'customer_id_sm',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('posts', 'object_id_sm',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('posts', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('posts', 'type',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('posts', 'shift_mode',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('posts', 'date')
    op.add_column('security_guards', sa.Column('date_modified', sa.DateTime(), nullable=True))
    op.add_column('security_guards', sa.Column('date_created', sa.DateTime(), nullable=True))
    op.drop_column('security_guards', 'date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('security_guards', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('security_guards', 'date_created')
    op.drop_column('security_guards', 'date_modified')
    op.add_column('posts', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('posts', 'shift_mode',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('posts', 'type',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('posts', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('posts', 'object_id_sm',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('posts', 'customer_id_sm',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('posts', 'filial_id_sm',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('posts', 'date_created')
    op.drop_column('posts', 'date_modified')
    op.drop_column('posts', 'length_to')
    op.drop_column('posts', 'length_from')
    op.drop_column('posts', 'linear_part')
    op.drop_column('posts', 'operation_mode')
    op.add_column('objects', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('objects', sa.Column('dogovor_id_sm', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'objects', type_='foreignkey')
    op.create_foreign_key('objects_dogovor_id_sm_fkey', 'objects', 'contracts', ['dogovor_id_sm'], ['id_sm'], ondelete='CASCADE')
    op.alter_column('objects', 'type',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('objects', 'contract_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('objects', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('objects', 'customer_id_sm',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('objects', 'filial_id_sm',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('objects', 'date_created')
    op.drop_column('objects', 'date_modified')
    op.drop_column('objects', 'contract_id_sm')
    op.add_column('income', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'income', type_='unique')
    op.alter_column('income', 'additional_comment',
               existing_type=sa.String(length=1023),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('income', 'comment',
               existing_type=sa.String(length=1023),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('income', 'id_sm',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('income', 'date_created')
    op.drop_column('income', 'date_modified')
    op.add_column('filials', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('filials', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('filials', 'date_created')
    op.drop_column('filials', 'date_modified')
    op.drop_column('filials', 'latitude')
    op.drop_column('filials', 'longitude')
    op.add_column('customers', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('customers', 'bin',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('customers', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('customers', 'date_created')
    op.drop_column('customers', 'date_modified')
    op.drop_column('customers', 'status')
    op.drop_column('contracts', 'date_created')
    op.drop_column('contracts', 'date_modified')
    op.create_table('mob_groups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_sm', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('filial_id_sm', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customer_id_sm', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('object_id_sm', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('operating_mode', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('linear_part', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('length_from', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('length_to', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customer_id_sm'], ['customers.id_sm'], name='mob_groups_customer_id_sm_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['filial_id_sm'], ['filials.id_sm'], name='mob_groups_filial_id_sm_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['object_id_sm'], ['objects.id_sm'], name='mob_groups_object_id_sm_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='mob_groups_pkey'),
    sa.UniqueConstraint('id_sm', name='mob_groups_id_sm_key')
    )
    op.drop_table('legal_claims')
    op.drop_table('employee')
    op.drop_table('contract_TRU')
    # ### end Alembic commands ###
