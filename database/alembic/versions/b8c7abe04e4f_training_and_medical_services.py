"""training and medical services

Revision ID: b8c7abe04e4f
Revises: 372c5063c3b1
Create Date: 2025-02-20 16:24:44.606294

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8c7abe04e4f'
down_revision: Union[str, None] = '372c5063c3b1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('training_and_medical_services', sa.Column('sm_state', sa.String(length=255), nullable=True))
    op.add_column('training_and_medical_services', sa.Column('annual_retraining_of_security_guards_quantity', sa.SmallInteger(), nullable=True))
    op.add_column('training_and_medical_services', sa.Column('anti_terrorism_training_quantity', sa.SmallInteger(), nullable=True))
    op.add_column('training_and_medical_services', sa.Column('annual_medical_examination_quantity', sa.SmallInteger(), nullable=True))
    op.add_column('training_and_medical_services', sa.Column('pre_shift_medical_examination_quantity', sa.SmallInteger(), nullable=True))
    op.drop_constraint('training_and_medical_services_id_sm_key', 'training_and_medical_services', type_='unique')
    op.drop_column('training_and_medical_services', 'pre_shift_medical_examination_quant')
    op.drop_column('training_and_medical_services', 'id_sm')
    op.drop_column('training_and_medical_services', 'annual_medical_examination_quant')
    op.drop_column('training_and_medical_services', 'anti_terrorism_training_quant')
    op.drop_column('training_and_medical_services', 'annual_retraining_of_security_guards_quant')
    op.drop_column('training_and_medical_services', 'fire_technical_minimum_quant')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('training_and_medical_services', sa.Column('fire_technical_minimum_quant', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('training_and_medical_services', sa.Column('annual_retraining_of_security_guards_quant', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('training_and_medical_services', sa.Column('anti_terrorism_training_quant', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('training_and_medical_services', sa.Column('annual_medical_examination_quant', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('training_and_medical_services', sa.Column('id_sm', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('training_and_medical_services', sa.Column('pre_shift_medical_examination_quant', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.create_unique_constraint('training_and_medical_services_id_sm_key', 'training_and_medical_services', ['id_sm'])
    op.drop_column('training_and_medical_services', 'pre_shift_medical_examination_quantity')
    op.drop_column('training_and_medical_services', 'annual_medical_examination_quantity')
    op.drop_column('training_and_medical_services', 'anti_terrorism_training_quantity')
    op.drop_column('training_and_medical_services', 'annual_retraining_of_security_guards_quantity')
    op.drop_column('training_and_medical_services', 'sm_state')
    # ### end Alembic commands ###
